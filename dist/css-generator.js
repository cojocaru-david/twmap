"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.CSSGenerator = void 0;
const fs = __importStar(require("fs"));
const path = __importStar(require("path"));
class CSSGenerator {
    generateCSS(mappings, outputPath) {
        const cssContent = this.buildCSSContent(mappings);
        // Ensure output directory exists
        const outputDir = path.dirname(outputPath);
        if (!fs.existsSync(outputDir)) {
            fs.mkdirSync(outputDir, { recursive: true });
        }
        fs.writeFileSync(outputPath, cssContent, 'utf-8');
    }
    buildCSSContent(mappings) {
        const header = `/* Generated by twmap - ${new Date().toISOString()} */\n/* Do not edit this file manually */\n\n`;
        const cssRules = mappings
            .sort((a, b) => a.generated.localeCompare(b.generated))
            .map(mapping => this.createCSSRule(mapping))
            .join('\n\n');
        return header + cssRules + '\n';
    }
    createCSSRule(mapping) {
        return `.${mapping.generated} {\n  @apply ${mapping.original};\n}`;
    }
    generateStats(mappings) {
        const totalMappings = mappings.length;
        const originalSize = mappings.reduce((sum, m) => sum + m.original.length, 0);
        const optimizedSize = mappings.reduce((sum, m) => sum + m.generated.length, 0);
        const savings = originalSize - optimizedSize;
        const savingsPercent = originalSize > 0 ? ((savings / originalSize) * 100).toFixed(1) : '0';
        return `
Statistics:
- Total class mappings: ${totalMappings}
- Original size: ${originalSize} characters
- Optimized size: ${optimizedSize} characters
- Savings: ${savings} characters (${savingsPercent}%)
`;
    }
}
exports.CSSGenerator = CSSGenerator;
